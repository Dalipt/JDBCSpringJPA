package com.java.SpringDataJpa;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.domain.EntityScan;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;

import com.java.SpringDataJpa.Entity.Library;
import com.java.SpringDataJpa.Service.LibraryServices;


// Generated by https://start.springboot.io
// 优质的 spring/boot/data/security/cloud 框架中文文档尽在 => https://springdoc.cn
@SpringBootApplication
public class SpringDataJpaApplication {

	public static void main(String[] args) {
		ConfigurableApplicationContext container=SpringApplication.run(SpringDataJpaApplication.class, args);
		 LibraryServices service=container.getBean(LibraryServices.class);
			
			  String sts=service.registerBookInfo(new Library("DataStructur","ModernPublisher",34243.98));
			  List<Library> liba= new ArrayList<Library>();
			  liba.add(new Library("DataStructur","ModernPublisher",34243.98));
			  liba.add(new Library("Physics","ModernABC",34221.98));
			  liba.add(new Library("Gate","ModernPublisher",34323.98));
			  
			  service.registerMultipleBookInfo(liba).forEach(v->System.out.println(v));
			  System.out.println(sts);
			 
			/*
			 * Long count=service.LibraryBookCount();
			 * System.out.println("Total Number of BookCount:"+count); int id=3; Boolean
			 * stst=service.checkBookAvailability(3); if(stst) {
			 * System.out.println("LibraryBook with id" +id +"available"); } else
			 * System.out.println("LibraryBook with id" +id +"Not available");
			 */
		 
		 	//service.getAllLibraryBookInfo().forEach(v->System.out.println(v));
			/*
			 * List<Integer> add= new ArrayList(); add.add(2); add.add(3);
			 * service.getAllLibraryBookInfo(add).forEach(v->System.out.println(v));
			 */
		 
			/*
			 * Integer id=87; Optional<Library> lib=service.getBooksBasedOnId(id);
			 * System.out.println(lib);
			 */
		 	Integer Id=2;
		 	String status=service.removeBookById(Id);
		 	System.out.println(status);
			/*
			 * Optional<Library> opt=service.getBooksBasedOnId(Id); 
			 * if(opt.isPresent()) 
			 * {
			 * System.out.println(opt.get());
			 *  } 
			 *  else { System.out.println("Book with Id"+Id+ "Not available");
			 *  }
			 */
	}

}
